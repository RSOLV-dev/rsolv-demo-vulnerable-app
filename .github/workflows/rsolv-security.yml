name: RSOLV Security Automation

on:
  # Weekly security scan
  schedule:
    - cron: '0 0 * * 1'
  
  # Manual trigger for demo
  workflow_dispatch:
  
  # Autofix when issue is labeled
  issues:
    types: [labeled]

permissions:
  issues: write
  contents: read
  pull-requests: write

jobs:
  security-scan:
    if: github.event_name != 'issues'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: RSOLV Security Scan
        uses: RSOLV-dev/rsolv-action@v2.1.2
        with:
          api_key: ${{ secrets.RSOLV_API_KEY }}
          scan_mode: scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RSOLV_API_URL: https://api.rsolv-staging.com

  autofix:
    if: github.event_name == 'issues' && github.event.label.name == 'rsolv:automate'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for git operations
      
      - name: RSOLV AutoFix
        uses: RSOLV-dev/rsolv-action@v2.1.2
        with:
          api_key: ${{ secrets.RSOLV_API_KEY }}
          issue_number: ${{ github.event.issue.number }}
          scan_mode: fix  # Explicitly set to fix mode
          use_git_based_editing: 'true'  # Re-enable git-based editing with fixed workspace access
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RSOLV_API_URL: https://api.rsolv-staging.com